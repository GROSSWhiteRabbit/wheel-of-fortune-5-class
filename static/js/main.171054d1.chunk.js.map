{"version":3,"sources":["services/requests.js","reduser/main.js","components/RightPanel/RightPanel.js","components/Wheel/Wheel.js","components/Theme/Theme.js","components/QuestionPanel/QuestionPanel.js","components/Egg/Egg.js","components/App.js","components/Spinner/Spinner.js","components/AppWithDb.js","store/store.js","index.js"],"names":["url","a","fetch","method","headers","res","ok","Error","status","json","main","createSlice","name","initialState","db","offset","rotate","select","leftSideStatus","score","attempts","levelQuestion","maxPoint","isDone","reducers","setDb","state","actions","console","log","dbPlayload","payload","length","questions","reduce","accum","point","setRotate","progres","turn","turnDifference","Math","floor","s","round","changeOfScene","restartQuest","responseCorrect","responseWrong","upLevelQuestion","toogleEasterEgg","PanelBlock","styled","div","RightPanel","dispatch","useDispatch","useSelector","style","cursor","onClick","WheelBlock","Wheel","useState","wasRotate","setWasRotate","animated","setAnimated","RenderWheel","circs","map","item","i","n","sectorWidth","PI","className","transform","r","cx","cy","strokeDasharray","x","y","viewBox","preserveAspectRatio","e","preventDefault","stopPropagation","der","random","start","requestAnimationFrame","animation","time","passed","lineProgress","animationRotate","ThemeBlock","H2","h2","Theme","them","color","textAlign","fadeIn","keyframes","WrapQuestion","Question","Answers","Answer","active","correct","cssText","css","Button","button","QuestionPanel","questObjs","question","answer","correctAnswer","setState","activeTab","setActiveTab","Context","onError","MathJax","error","warn","Hub","Queue","Typeset","script","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","onSelectTab","disabled","jumpsX","EggBlock","Egg","AppBlock","jumps","Main","Modal","ContentModal","App","MainPanel","leftSide","Spinner","AppWithDb","loading","setLoading","useEffect","resize","clientWidth","document","documentElement","fontSize","window","addEventListener","detectResize","getData","process","then","catch","allReduser","combineReducers","store","configureStore","reducer","devTools","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.171054d1.chunk.js","sourcesContent":["async function postData(url, body) {\r\n    let response = await fetch(url, {\r\n                                    method: 'POST',\r\n                                    body\r\n                                });\r\n    if (!response.ok){\r\n        \r\n        throw (`POST Erorr url:${url}  status:${response.status}`);\r\n    }\r\n    return await response.text();\r\n\r\n}\r\n\r\nasync function getData(url){\r\n    const res = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n    });\r\n    if(!res.ok){\r\n        throw new Error(`could not feth ${url}, status:${res.status}` );\r\n    }\r\n    return await res.json();\r\n    \r\n}\r\n\r\nexport {postData,getData};\r\n\r\n\r\n\r\n\r\n\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst main = createSlice({\r\n    name:'main',\r\n    initialState: {\r\n        db: [],\r\n        offset: 0,\r\n        rotate: 0,\r\n        select: 0,\r\n        leftSideStatus: 'wheel',\r\n        score: 0,\r\n        attempts: 0,\r\n        // wasRotate: false,\r\n        levelQuestion: 0,\r\n        maxPoint: 0,\r\n        // animated: false,\r\n        isDone: false,\r\n        \r\n    },\r\n    reducers: {\r\n        setDb(state,actions) {\r\n            console.log(actions, 'actions')\r\n            const dbPlayload = actions.payload;\r\n            state.db = dbPlayload\r\n            state.offset = 360/dbPlayload.length;\r\n            state.rotate = -(360/dbPlayload.length)/2;\r\n            state.attempts = dbPlayload[0].questions.length;\r\n            state.maxPoint = dbPlayload[0].questions.reduce((accum, {point})=> accum+point, 0);\r\n        },\r\n        setRotate(state, actions){\r\n            const {progres, turn, turnDifference} = actions.payload;\r\n            state.rotate = state.rotate - (Math.floor( progres*turn) - turnDifference) ;\r\n\r\n            let s = Math.round(-((state.rotate+state.offset/2)%360)/(state.offset))\r\n            if(s === 8) {\r\n                s = 0\r\n            }\r\n            state.select = s;\r\n        },\r\n        changeOfScene(state, actions){\r\n            if(state.leftSideStatus ==='wheel' && state.attempts >0){ \r\n                state.leftSideStatus = 'question'\r\n              } else if(state.leftSideStatus ==='question') {\r\n                state.leftSideStatus = 'wheel'\r\n                if(state.attempts<=0){\r\n                    state.isDone = true;\r\n                }\r\n              }\r\n        },\r\n        restartQuest(state){\r\n            state.attempts = state.db[0].questions.length;\r\n            state.score = 0;\r\n            state.levelQuestion = 0;\r\n            state.isDone = false;\r\n        },\r\n        responseCorrect(state, actions){\r\n            const point = actions.payload;\r\n            state.score =  state.score + point;\r\n            state.attempts = state.attempts - 1;\r\n        },\r\n        responseWrong(state){\r\n            state.attempts = state.attempts - 1;\r\n        },\r\n        upLevelQuestion(state){\r\n            state.levelQuestion = state.levelQuestion + 1;\r\n        },\r\n        toogleEasterEgg(state){\r\n            if(state.leftSideStatus ==='wheel' && !state.isDone ){ \r\n                state.leftSideStatus = 'easterEgg'\r\n              } else if(state.leftSideStatus ==='easterEgg') {\r\n                state.leftSideStatus = 'wheel'\r\n              }\r\n        }\r\n    }\r\n})\r\n\r\nexport default main.reducer;\r\nexport const {\r\n    setDb,\r\n    setRotate, \r\n    changeOfScene, \r\n    restartQuest,\r\n    responseCorrect,\r\n    responseWrong,\r\n    upLevelQuestion,\r\n    toogleEasterEgg\r\n} = main.actions ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {toogleEasterEgg} from '../../reduser/main';\r\n\r\n\r\nconst PanelBlock = styled.div`\r\n    background: #181414 ;\r\n    display:flex ;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;   \r\n    text-align:center;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    user-select: none;\r\n    z-index: 1;\r\n\r\n`;\r\n\r\nfunction RightPanel () {\r\n\r\nconst dispatch = useDispatch();\r\nconst onToogleEasterEgg = ()=>dispatch(toogleEasterEgg())\r\nconst {attempts,maxPoint,score} = useSelector(state=> state.main)\r\nreturn ( \r\n    <PanelBlock>\r\n        <h1>Спроб</h1>\r\n        <h2>{attempts}</h2>\r\n        <h1> Максимум балів</h1>\r\n        <h2>{maxPoint}</h2>\r\n        <h1> Набрано балів</h1>\r\n        <h2>{score}</h2>\r\n        <h4 style={{cursor: \"pointer\"}} onClick={onToogleEasterEgg}>^_^</h4>\r\n\r\n    </PanelBlock>\r\n)\r\n}\r\n\r\nexport default RightPanel;","import React, { useState }  from 'react';\r\nimport styled from 'styled-components';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setRotate, changeOfScene} from '../../reduser/main';\r\nimport './Wheel.scss';\r\n\r\n\r\n\r\nconst WheelBlock = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\ncursor:pointer;\r\n\r\nsvg {\r\n    width: 27vw;\r\n    height:27vw;\r\n}\r\n`\r\n\r\nfunction Wheel() {\r\n\r\n    const {db, rotate, offset} = useSelector(state => state.main)\r\n \r\n    const dispatch = useDispatch();\r\n\r\n    const [wasRotate, setWasRotate] = useState(false)\r\n    const [animated, setAnimated] = useState(false)\r\n\r\n        \r\n    function animationRotate( ) {\r\n\r\n        setAnimated(true)\r\n        let der = 2000 + Math.floor(3000* Math.random());\r\n        const turn = 1000 + Math.floor(3000* Math.random());\r\n         der =turn*2\r\n        let start = null,\r\n            turnDifference = 0;\r\n        function animation(time) {\r\n          if (!start){\r\n            start = time;\r\n          }\r\n          let passed =  time - start ,\r\n          lineProgress = passed/der;\r\n          const progres = lineProgress +  lineProgress**2*(1-lineProgress);\r\n          dispatch(setRotate({progres, turn, turnDifference}));\r\n          turnDifference =  Math.floor( progres*turn);\r\n    \r\n          if(passed <= der) {\r\n              requestAnimationFrame(animation)\r\n          } else{\r\n            start = null;\r\n            setWasRotate(true)\r\n            setAnimated(false)\r\n          }\r\n        }\r\n        requestAnimationFrame(animation)\r\n      } \r\n    \r\n      function handleClickWheel(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        if(wasRotate) {\r\n            dispatch(changeOfScene())\r\n            setWasRotate(false)\r\n        } else {\r\n          if(!animated) {\r\n            animationRotate();\r\n    \r\n          }\r\n        }\r\n      }\r\n\r\n    function RenderWheel() {\r\n        const circs =  db.map((item, i)=>{\r\n            const n = i+1,\r\n                  sectorWidth = 2*Math.PI*25/db.length;\r\n            return (\r\n                <g className={\"g\" + n } key= {i} style={{transform: `rotate(${offset*i}deg)`}}> \r\n                    <circle className=\"sector\" r=\"25\" cx=\"50\" cy=\"50\"\r\n                    strokeDasharray={`${sectorWidth}, 157.07963267948966\r\n                    `} />\r\n                    <text x=\"84\" y=\"50\" style={{transform: `rotate(${offset*0.66 }deg)`}}>{n}</text>  \r\n\r\n                </g>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <span className=\"circWrap\">\r\n                <svg    viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\" style={{transform: `rotate(${rotate}deg)`}}>\r\n                {circs}\r\n            </svg>\r\n            </span>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <WheelBlock onClick={handleClickWheel} >\r\n            <span  className='wrapper'>\r\n                <RenderWheel/> \r\n                <span className=\"arrow-7\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n\r\n                </span>     \r\n            </span>\r\n                \r\n        </WheelBlock>\r\n           \r\n    )\r\n}\r\n\r\n\r\nexport default Wheel;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\n\r\nconst ThemeBlock = styled.div`\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n\r\n\r\n`\r\nconst H2 = styled.h2`\r\nfont-size: 1.2rem;\r\ncolor: ${({select})=> select? 'red': null};\r\n`\r\n\r\nfunction Theme () {\r\n    const {db, select} = useSelector(state=>state.main);\r\n\r\n    function renderThems() {\r\n        if(!db){\r\n            return <h2 style={{\r\n                color:'red',\r\n                textAlign: \"center\"}} \r\n                >Отсуцтвует база данных</h2>\r\n        } else {\r\n            return db.map(({them}, i) => {\r\n                if(i === select){\r\n                    return <H2 select  key={i}>{them}</H2>\r\n                }\r\n               return <H2 key={i}>{them}</H2>\r\n            })\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <ThemeBlock>\r\n           { renderThems()}\r\n        </ThemeBlock>\r\n    )\r\n\r\n}\r\n\r\nexport default Theme;","import React, { useState} from 'react';\r\nimport MathJax from 'react-mathjax2'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {responseCorrect, responseWrong, upLevelQuestion,changeOfScene} from '../../reduser/main';\r\nimport styled, {keyframes, css} from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    transform: scale(0,0)\r\n  }\r\n  100% {\r\n    transform: scale(100%,100%)\r\n  }\r\n`\r\n\r\nconst WrapQuestion = styled.div`\r\n    padding: 2%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n    margin: 0 5%;    \r\n    animation: ${fadeIn} 1s;\r\n    user-select: none;\r\n\r\n\r\n`;\r\n\r\nconst Question = styled.div`\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:100%;\r\n    height:100%;\r\n    white-space: break-spaces;\r\n    h2 {\r\n        margin: 1% auto;\r\n    }\r\n\r\n`\r\nconst Answers = styled.div`\r\n\r\n\r\n    padding: 5%;\r\n\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n`\r\nconst Answer = styled.div`\r\n    \r\n\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    border-radius: 8px;\r\n    background: rgba(0,0,0,0.3);\r\n    padding: 2%;\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\n    width:42%;\r\n    height:50%;\r\n    display:grid;\r\n    place-content: center;\r\n    overflow: hidden;\r\n\r\n    &:nth-child(1) {\r\n        margin-bottom: 2%;\r\n    }\r\n    &:nth-child(2) {\r\n        margin-bottom: 2%;\r\n    }\r\n    span{\r\n        text-align: center;\r\n        font-size: 1.4rem;\r\n    }\r\n    ${({state,active, correct})=> {\r\n        let cssText ='';\r\n        if(state === 'chose' && !active){\r\n            cssText += css`\r\n            cursor: pointer;\r\n            &:hover{\r\n                border-color:#BB968D;\r\n            }\r\n            `\r\n        }\r\n        if(active&& state === 'chose') {\r\n            cssText += css`\r\n                cursor: pointer;\r\n                border-color:#ed785b    ;\r\n            `\r\n        }\r\n        if(correct&&(state === \"correct\"|| state === \"wrong\" )) {\r\n            cssText += css`\r\n                border-color:#229756    ;\r\n            `\r\n        }\r\n        if(active&& state === \"wrong\") {\r\n            cssText += css`\r\n                border-color:#e52b50    ;\r\n            `\r\n        }\r\n        return cssText\r\n    }}\r\n`\r\nexport const Button = styled.button`\r\n    box-shadow: 4px 4px 20px rgba(0,0,0,.5);    \r\n    position:absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform:translate(-50%,-50%);\r\n    border: 1px solid rgba(0,0,0,0.2);\r\n    font: inherit;\r\n    color: inherit;\r\n    outline:none;\r\n    border-radius: 4px;\r\n    color:rgba(16, 16, 16, 0.3);\r\n    padding: 4px 8px;\r\n    background:rgba(118, 118, 118, 0.3);\r\n    font-weight: 800;\r\n    text-align: center;\r\n    ${({active})=> {\r\n        if(active>=0) {\r\n            console.log(active)\r\n            return css`\r\n            cursor:pointer;\r\n            background: #d53e07;\r\n            color:#5A092A;\r\n            &:hover{\r\n                background-color: #aa3206;\r\n            }\r\n            `\r\n            \r\n        }   \r\n    }}\r\n    \r\n`\r\n\r\nfunction QuestionPanel() {\r\n    const dispatch = useDispatch()\r\n    const {db, select, levelQuestion} = useSelector(state=> state.main);\r\n    const {them, questions} = db[select];\r\n    const {point, questions: questObjs} = questions[levelQuestion];\r\n    const [numderQustion] = useState(Math.floor(Math.random()*questObjs.length) );\r\n    const {question, answer, correctAnswer} = questObjs[numderQustion];\r\n    const [state, setState] = useState('chose');\r\n    const [activeTab, setActiveTab] = useState();\r\n\r\n    function onClickButton() {\r\n        if (state === 'chose'){\r\n            if(!activeTab &&activeTab!==0){\r\n                return\r\n            }\r\n            if(activeTab===correctAnswer){\r\n                setState('correct');\r\n                dispatch(responseCorrect(point));\r\n\r\n            }\r\n            if(activeTab!==correctAnswer){\r\n                setState('wrong');\r\n                dispatch(responseWrong());\r\n            }\r\n        } else {\r\n            dispatch(upLevelQuestion());\r\n            dispatch(changeOfScene())\r\n            \r\n        }\r\n\r\n    }\r\n    function onSelectTab(i) {\r\n        if(state==='chose') {\r\n            setActiveTab(i);\r\n        }\r\n    }\r\n    function renderAnswer() {\r\n        return answer.map((item, i) => {\r\n            const active = (activeTab === i);\r\n            const correct = (correctAnswer === i);\r\n\r\n            return (\r\n            <Answer onClick={()=>onSelectTab(i)} correct={correct} state ={state} active={active}>\r\n                       <span><MathJax.Text text={ item }/></span>\r\n                   </Answer  >\r\n            )   \r\n        })\r\n    }\r\n\r\n    return (\r\n        (\r\n            <MathJax.Context\r\n            \r\n            \r\n            onError={ (MathJax, error) => {\r\n                console.warn(error);\r\n                console.log(\"Encountered a MathJax error, re-attempting a typeset!\");\r\n                MathJax.Hub.Queue(\r\n                  MathJax.Hub.Typeset()\r\n                );\r\n            } }\r\n            script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\"\r\n            options={ {\r\n                asciimath2jax: {\r\n                     useMathMLspacing: true,\r\n                     delimiters: [[\"$$\",\"$$\"]],\r\n                     preview: \"none\",\r\n                }\r\n            } }\r\n        >\r\n            <WrapQuestion>\r\n               <Question>\r\n                   <h2>Тема: {them}</h2>\r\n        <h2>Питання (балів {point}):  <MathJax.Text text={ question }/> </h2>\r\n               </Question>\r\n               <Answers>\r\n                    {renderAnswer()}\r\n                    <Button disabled ={!(activeTab>=0)} active={activeTab} onClick={onClickButton}>{state===\"chose\"?\"Відповісти\":\"Далі\"}</Button>\r\n               </Answers>\r\n            </WrapQuestion>\r\n        </MathJax.Context>\r\n            \r\n        )\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default QuestionPanel;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport {useDispatch} from 'react-redux';\r\nimport {toogleEasterEgg} from '../../reduser/main';\r\n\r\nexport const jumpsX = keyframes`\r\n   0%,\r\n  60%,\r\n  75%,\r\n  90%,\r\n  to {\r\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\r\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate(2000px, 0);\r\n    transform: translate(2000px, 0) ;\r\n  }\r\n\r\n\r\n\r\n  to {\r\n    -webkit-transform: translate(0);\r\n    transform: translate(0);\r\n  }\r\n`\r\n\r\nconst EggBlock = styled.div`\r\npadding: 2%;\r\nwidth: 100%;\r\nheight: 100%;\r\nanimation: ${jumpsX} 1s;\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbackground: rgba(0,0,0,0.3);\r\npadding: 5%;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\ndisplay: flex;\r\nalign-items:center;\r\n\r\n`;\r\n\r\nfunction Egg() {\r\n  const dispatch = useDispatch();\r\n\r\n    return (\r\n        <EggBlock onClick={()=>dispatch(toogleEasterEgg())}>\r\n            <h1>Здравствуй шукач. Тобі потрапила унікальна річ, можливість дізнатися на що ти здатний як маленький мислитель, а може і великий. Випробуй свої сили, раптом весь світ для тебе всього лише маленька сходинка, і ти здатний прогинати сам всесвіт під себе...</h1>\r\n        </EggBlock>\r\n    )\r\n}\r\n\r\nexport default Egg; ","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {restartQuest} from '../reduser/main';\r\nimport RightPanel from './RightPanel/RightPanel';\r\nimport Wheel from './Wheel/Wheel';\r\nimport Theme from './Theme/Theme';\r\nimport QuestionPanel, {Button} from './QuestionPanel/QuestionPanel';\r\nimport Egg, {jumpsX} from './Egg/Egg';\r\n\r\n\r\n\r\nconst AppBlock = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 1fr minmax(80px, 15%);\r\nheight: 100vh;\r\n`;\r\n\r\nconst jumps = keyframes`\r\n   0%,\r\n  60%,\r\n  75%,\r\n  90%,\r\n  to {\r\n    -webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\r\n    animation-timing-function: cubic-bezier(.215, .61, .355, 1)\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(0, -3000px, 0) scaleY(3);\r\n    transform: translate3d(0, -3000px, 0) scaleY(3)\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    -webkit-transform: translate3d(0, 25px, 0) scaleY(.9);\r\n    transform: translate3d(0, 25px, 0) scaleY(.9)\r\n  }\r\n\r\n  75% {\r\n    -webkit-transform: translate3d(0, -10px, 0) scaleY(.95);\r\n    transform: translate3d(0, -10px, 0) scaleY(.95)\r\n  }\r\n\r\n  90% {\r\n    -webkit-transform: translate3d(0, 5px, 0) scaleY(.985);\r\n    transform: translate3d(0, 5px, 0) scaleY(.985)\r\n  }\r\n\r\n  to {\r\n    -webkit-transform: translateZ(0);\r\n    transform: translateZ(0)\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\npadding: 2%;\r\ndisplay:grid;\r\ngrid-template-columns: minmax(100px, 25%) 1fr;\r\nheight: 100%;\r\nanimation: ${jumps} 1s;\r\n\r\n`;\r\n\r\nconst Modal = styled.div`\r\nposition: fixed;\r\nbackground: rgba(0,0,0,0.3);\r\nheight: 100vh;\r\nwidth:100%;\r\ntop: 0;\r\nanimation: ${jumpsX} 1s;\r\nuser-select: none;\r\n\r\n\r\n`\r\nconst ContentModal = styled.div`\r\nmargin: 20% auto;\r\n\r\nbackground: #2D132E;\r\nborder: 1px solid rgba(0,0,0,0.2);\r\nborder-radius: 8px;\r\nbox-shadow: 4px 4px 20px rgba(0,0,0,.5); \r\ndisplay:grid;\r\nplace-content: center;\r\noverflow: hidden;\r\ntext-align: center;\r\ndiv {\r\n  position:relative;\r\n  height:5%;\r\n}\r\n\r\n\r\n`\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\nconsole.log(useSelector(state=>state), 'ok');\r\n  const {\r\n    leftSideStatus,\r\n     isDone,\r\n     score,\r\n     maxPoint\r\n    } = useSelector(state=>state.main)\r\n\r\n  \r\nconst onclickRestart = ()=> dispatch(restartQuest())\r\n\r\n  \r\n  const MainPanel = (\r\n      <Main>\r\n        <Theme/>\r\n        <Wheel/>\r\n      </Main>\r\n  )\r\n\r\n\r\n  const leftSide = leftSideStatus === 'easterEgg'? \r\n    <Egg/> : leftSideStatus === 'wheel'? \r\n    MainPanel:<QuestionPanel/>;\r\n\r\n  \r\n  return (\r\n    <AppBlock>\r\n        <div>{leftSide}</div>\r\n        {isDone ?(<Modal>\r\n          <ContentModal>\r\n            <h1>Тадам!!! Пройдено.</h1>\r\n            <div><Button active={true} onClick={onclickRestart}>Спробувати ще раз</Button></div>\r\n\r\n            <h2>Ви набрали балів {score} з {maxPoint} </h2>\r\n          </ContentModal>\r\n        </Modal>): null}\r\n        \r\n        \r\n      \r\n      \r\n      <RightPanel/>\r\n        \r\n    </AppBlock>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-fk7ku9c8m9l\">\r\n            <div className=\"ldio-45x3bngxgcj\">\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState} from 'react';\r\nimport {getData} from '../services/requests';\r\nimport App from './App';\r\nimport Spinner from './Spinner/Spinner';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setDb} from '../reduser/main';\r\n\r\n\r\nfunction AppWithDb() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    const detectResize = ()=> {\r\n        const resize =  function(){\r\n            const clientWidth = document.documentElement.clientWidth\r\n          \r\n            document.documentElement.style.fontSize = clientWidth / 84 + 'px'\r\n          };\r\n          resize()\r\n          window.addEventListener(`resize`, resize);\r\n    }\r\n    useEffect(()=>{\r\n        detectResize();\r\n        getData(process.env.PUBLIC_URL\r\n            +'/db.json')\r\n            .then((res)=> {\r\n                console.log(res, 'res')\r\n                dispatch(setDb(res));\r\n                setLoading(false);\r\n            })\r\n            .catch((e)=> console.error(e));\r\n            \r\n    },[]);\r\n\r\n    if(loading) {\r\n        return <Spinner/>;\r\n    } else {\r\n        return <App/>\r\n    }\r\n\r\n}\r\n\r\nexport default AppWithDb;","import {configureStore, combineReducers} from '@reduxjs/toolkit';\r\nimport main from '../reduser/main'\r\n\r\nconst allReduser = combineReducers({\r\n    main\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: allReduser,\r\n    devTools: true\r\n})\r\nconsole.log(store.getState(), 'getState');\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppWithDb from './components/AppWithDb';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <AppWithDb />\r\n    </Provider>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}